//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "FK_BlobEvents_Blobs", "Blob", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Blob), "BlobEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.BlobEvent))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "FK_BlobEvents_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.User), "BlobEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.BlobEvent))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "FK_Permissions_Blobs", "Blob", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Blob), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Permission))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "FK_BlobSetEvents_BlobSets", "BlobSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.BlobSet), "BlobSetEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.BlobSetEvent))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "FK_BlobSetEvents_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.User), "BlobSetEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.BlobSetEvent))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "FK_Permissions_BlobSets", "BlobSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.BlobSet), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Permission))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "FK_Invitations_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.User), "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Invitation))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "FK_UserEvents_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.User), "UserEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.UserEvent))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "BlobSetBlobs", "Blob", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Blob), "BlobSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.BlobSet))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "RolePermissions", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Permission), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Role))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "UserPermissions", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Permission), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.User))]
[assembly: EdmRelationshipAttribute("BlobShareDataStoreModel", "UsersRoles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.Samples.DPE.BlobShare.Data.Model.User))]

#endregion

namespace Microsoft.Samples.DPE.BlobShare.Data.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BlobShareDataStoreEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BlobShareDataStoreEntities object using the connection string found in the 'BlobShareDataStoreEntities' section of the application configuration file.
        /// </summary>
        public BlobShareDataStoreEntities() : base("name=BlobShareDataStoreEntities", "BlobShareDataStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BlobShareDataStoreEntities object.
        /// </summary>
        public BlobShareDataStoreEntities(string connectionString) : base(connectionString, "BlobShareDataStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BlobShareDataStoreEntities object.
        /// </summary>
        public BlobShareDataStoreEntities(EntityConnection connection) : base(connection, "BlobShareDataStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlobEvent> BlobEvents
        {
            get
            {
                if ((_BlobEvents == null))
                {
                    _BlobEvents = base.CreateObjectSet<BlobEvent>("BlobEvents");
                }
                return _BlobEvents;
            }
        }
        private ObjectSet<BlobEvent> _BlobEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Blob> Blobs
        {
            get
            {
                if ((_Blobs == null))
                {
                    _Blobs = base.CreateObjectSet<Blob>("Blobs");
                }
                return _Blobs;
            }
        }
        private ObjectSet<Blob> _Blobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlobSetEvent> BlobSetEvents
        {
            get
            {
                if ((_BlobSetEvents == null))
                {
                    _BlobSetEvents = base.CreateObjectSet<BlobSetEvent>("BlobSetEvents");
                }
                return _BlobSetEvents;
            }
        }
        private ObjectSet<BlobSetEvent> _BlobSetEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlobSet> BlobSets
        {
            get
            {
                if ((_BlobSets == null))
                {
                    _BlobSets = base.CreateObjectSet<BlobSet>("BlobSets");
                }
                return _BlobSets;
            }
        }
        private ObjectSet<BlobSet> _BlobSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitation> Invitations
        {
            get
            {
                if ((_Invitations == null))
                {
                    _Invitations = base.CreateObjectSet<Invitation>("Invitations");
                }
                return _Invitations;
            }
        }
        private ObjectSet<Invitation> _Invitations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserEvent> UserEvents
        {
            get
            {
                if ((_UserEvents == null))
                {
                    _UserEvents = base.CreateObjectSet<UserEvent>("UserEvents");
                }
                return _UserEvents;
            }
        }
        private ObjectSet<UserEvent> _UserEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlobEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlobEvents(BlobEvent blobEvent)
        {
            base.AddObject("BlobEvents", blobEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlobs(Blob blob)
        {
            base.AddObject("Blobs", blob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlobSetEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlobSetEvents(BlobSetEvent blobSetEvent)
        {
            base.AddObject("BlobSetEvents", blobSetEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlobSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlobSets(BlobSet blobSet)
        {
            base.AddObject("BlobSets", blobSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitations(Invitation invitation)
        {
            base.AddObject("Invitations", invitation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserEvents(UserEvent userEvent)
        {
            base.AddObject("UserEvents", userEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="Blob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Blob object.
        /// </summary>
        /// <param name="blobId">Initial value of the BlobId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="originalFileName">Initial value of the OriginalFileName property.</param>
        /// <param name="uploadDateTime">Initial value of the UploadDateTime property.</param>
        public static Blob CreateBlob(global::System.Guid blobId, global::System.String name, global::System.String originalFileName, global::System.DateTime uploadDateTime)
        {
            Blob blob = new Blob();
            blob.BlobId = blobId;
            blob.Name = name;
            blob.OriginalFileName = originalFileName;
            blob.UploadDateTime = uploadDateTime;
            return blob;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BlobId
        {
            get
            {
                return _BlobId;
            }
            set
            {
                if (_BlobId != value)
                {
                    OnBlobIdChanging(value);
                    ReportPropertyChanging("BlobId");
                    _BlobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlobId");
                    OnBlobIdChanged();
                }
            }
        }
        private global::System.Guid _BlobId;
        partial void OnBlobIdChanging(global::System.Guid value);
        partial void OnBlobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalFileName
        {
            get
            {
                return _OriginalFileName;
            }
            set
            {
                OnOriginalFileNameChanging(value);
                ReportPropertyChanging("OriginalFileName");
                _OriginalFileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OriginalFileName");
                OnOriginalFileNameChanged();
            }
        }
        private global::System.String _OriginalFileName;
        partial void OnOriginalFileNameChanging(global::System.String value);
        partial void OnOriginalFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadDateTime
        {
            get
            {
                return _UploadDateTime;
            }
            set
            {
                OnUploadDateTimeChanging(value);
                ReportPropertyChanging("UploadDateTime");
                _UploadDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadDateTime");
                OnUploadDateTimeChanged();
            }
        }
        private global::System.DateTime _UploadDateTime;
        partial void OnUploadDateTimeChanging(global::System.DateTime value);
        partial void OnUploadDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_BlobEvents_Blobs", "BlobEvent")]
        public EntityCollection<BlobEvent> BlobEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlobEvent>("BlobShareDataStoreModel.FK_BlobEvents_Blobs", "BlobEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlobEvent>("BlobShareDataStoreModel.FK_BlobEvents_Blobs", "BlobEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_Permissions_Blobs", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("BlobShareDataStoreModel.FK_Permissions_Blobs", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("BlobShareDataStoreModel.FK_Permissions_Blobs", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "BlobSetBlobs", "BlobSet")]
        public EntityCollection<BlobSet> BlobSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlobSet>("BlobShareDataStoreModel.BlobSetBlobs", "BlobSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlobSet>("BlobShareDataStoreModel.BlobSetBlobs", "BlobSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="BlobEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlobEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlobEvent object.
        /// </summary>
        /// <param name="blobEventId">Initial value of the BlobEventId property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        public static BlobEvent CreateBlobEvent(global::System.Guid blobEventId, global::System.Int32 eventType, global::System.DateTime eventDateTime)
        {
            BlobEvent blobEvent = new BlobEvent();
            blobEvent.BlobEventId = blobEventId;
            blobEvent.EventType = eventType;
            blobEvent.EventDateTime = eventDateTime;
            return blobEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BlobEventId
        {
            get
            {
                return _BlobEventId;
            }
            set
            {
                if (_BlobEventId != value)
                {
                    OnBlobEventIdChanging(value);
                    ReportPropertyChanging("BlobEventId");
                    _BlobEventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlobEventId");
                    OnBlobEventIdChanged();
                }
            }
        }
        private global::System.Guid _BlobEventId;
        partial void OnBlobEventIdChanging(global::System.Guid value);
        partial void OnBlobEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.Int32 _EventType;
        partial void OnEventTypeChanging(global::System.Int32 value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDateTime
        {
            get
            {
                return _EventDateTime;
            }
            set
            {
                OnEventDateTimeChanging(value);
                ReportPropertyChanging("EventDateTime");
                _EventDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDateTime");
                OnEventDateTimeChanged();
            }
        }
        private global::System.DateTime _EventDateTime;
        partial void OnEventDateTimeChanging(global::System.DateTime value);
        partial void OnEventDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserAgent
        {
            get
            {
                return _UserAgent;
            }
            set
            {
                OnUserAgentChanging(value);
                ReportPropertyChanging("UserAgent");
                _UserAgent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserAgent");
                OnUserAgentChanged();
            }
        }
        private global::System.String _UserAgent;
        partial void OnUserAgentChanging(global::System.String value);
        partial void OnUserAgentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RemoteMachine
        {
            get
            {
                return _RemoteMachine;
            }
            set
            {
                OnRemoteMachineChanging(value);
                ReportPropertyChanging("RemoteMachine");
                _RemoteMachine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RemoteMachine");
                OnRemoteMachineChanged();
            }
        }
        private global::System.String _RemoteMachine;
        partial void OnRemoteMachineChanging(global::System.String value);
        partial void OnRemoteMachineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.String _SessionId;
        partial void OnSessionIdChanging(global::System.String value);
        partial void OnSessionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_BlobEvents_Blobs", "Blob")]
        public Blob Blob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("BlobShareDataStoreModel.FK_BlobEvents_Blobs", "Blob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("BlobShareDataStoreModel.FK_BlobEvents_Blobs", "Blob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Blob> BlobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("BlobShareDataStoreModel.FK_BlobEvents_Blobs", "Blob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Blob>("BlobShareDataStoreModel.FK_BlobEvents_Blobs", "Blob", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_BlobEvents_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_BlobEvents_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_BlobEvents_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_BlobEvents_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BlobShareDataStoreModel.FK_BlobEvents_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="BlobSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlobSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlobSet object.
        /// </summary>
        /// <param name="blobSetId">Initial value of the BlobSetId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BlobSet CreateBlobSet(global::System.Guid blobSetId, global::System.String name)
        {
            BlobSet blobSet = new BlobSet();
            blobSet.BlobSetId = blobSetId;
            blobSet.Name = name;
            return blobSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BlobSetId
        {
            get
            {
                return _BlobSetId;
            }
            set
            {
                if (_BlobSetId != value)
                {
                    OnBlobSetIdChanging(value);
                    ReportPropertyChanging("BlobSetId");
                    _BlobSetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlobSetId");
                    OnBlobSetIdChanged();
                }
            }
        }
        private global::System.Guid _BlobSetId;
        partial void OnBlobSetIdChanging(global::System.Guid value);
        partial void OnBlobSetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentBlobSetId
        {
            get
            {
                return _ParentBlobSetId;
            }
            set
            {
                OnParentBlobSetIdChanging(value);
                ReportPropertyChanging("ParentBlobSetId");
                _ParentBlobSetId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentBlobSetId");
                OnParentBlobSetIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentBlobSetId;
        partial void OnParentBlobSetIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentBlobSetIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_BlobSetEvents_BlobSets", "BlobSetEvent")]
        public EntityCollection<BlobSetEvent> BlobSetEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlobSetEvent>("BlobShareDataStoreModel.FK_BlobSetEvents_BlobSets", "BlobSetEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlobSetEvent>("BlobShareDataStoreModel.FK_BlobSetEvents_BlobSets", "BlobSetEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_Permissions_BlobSets", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("BlobShareDataStoreModel.FK_Permissions_BlobSets", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("BlobShareDataStoreModel.FK_Permissions_BlobSets", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "BlobSetBlobs", "Blob")]
        public EntityCollection<Blob> Blobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blob>("BlobShareDataStoreModel.BlobSetBlobs", "Blob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blob>("BlobShareDataStoreModel.BlobSetBlobs", "Blob", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="BlobSetEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlobSetEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlobSetEvent object.
        /// </summary>
        /// <param name="blobSetEventId">Initial value of the BlobSetEventId property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        public static BlobSetEvent CreateBlobSetEvent(global::System.Guid blobSetEventId, global::System.Int32 eventType, global::System.DateTime eventDateTime)
        {
            BlobSetEvent blobSetEvent = new BlobSetEvent();
            blobSetEvent.BlobSetEventId = blobSetEventId;
            blobSetEvent.EventType = eventType;
            blobSetEvent.EventDateTime = eventDateTime;
            return blobSetEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BlobSetEventId
        {
            get
            {
                return _BlobSetEventId;
            }
            set
            {
                if (_BlobSetEventId != value)
                {
                    OnBlobSetEventIdChanging(value);
                    ReportPropertyChanging("BlobSetEventId");
                    _BlobSetEventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlobSetEventId");
                    OnBlobSetEventIdChanged();
                }
            }
        }
        private global::System.Guid _BlobSetEventId;
        partial void OnBlobSetEventIdChanging(global::System.Guid value);
        partial void OnBlobSetEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.Int32 _EventType;
        partial void OnEventTypeChanging(global::System.Int32 value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDateTime
        {
            get
            {
                return _EventDateTime;
            }
            set
            {
                OnEventDateTimeChanging(value);
                ReportPropertyChanging("EventDateTime");
                _EventDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDateTime");
                OnEventDateTimeChanged();
            }
        }
        private global::System.DateTime _EventDateTime;
        partial void OnEventDateTimeChanging(global::System.DateTime value);
        partial void OnEventDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserAgent
        {
            get
            {
                return _UserAgent;
            }
            set
            {
                OnUserAgentChanging(value);
                ReportPropertyChanging("UserAgent");
                _UserAgent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserAgent");
                OnUserAgentChanged();
            }
        }
        private global::System.String _UserAgent;
        partial void OnUserAgentChanging(global::System.String value);
        partial void OnUserAgentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RemoteMachine
        {
            get
            {
                return _RemoteMachine;
            }
            set
            {
                OnRemoteMachineChanging(value);
                ReportPropertyChanging("RemoteMachine");
                _RemoteMachine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RemoteMachine");
                OnRemoteMachineChanged();
            }
        }
        private global::System.String _RemoteMachine;
        partial void OnRemoteMachineChanging(global::System.String value);
        partial void OnRemoteMachineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.String _SessionId;
        partial void OnSessionIdChanging(global::System.String value);
        partial void OnSessionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_BlobSetEvents_BlobSets", "BlobSet")]
        public BlobSet BlobSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlobSet>("BlobShareDataStoreModel.FK_BlobSetEvents_BlobSets", "BlobSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlobSet>("BlobShareDataStoreModel.FK_BlobSetEvents_BlobSets", "BlobSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlobSet> BlobSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlobSet>("BlobShareDataStoreModel.FK_BlobSetEvents_BlobSets", "BlobSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlobSet>("BlobShareDataStoreModel.FK_BlobSetEvents_BlobSets", "BlobSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_BlobSetEvents_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_BlobSetEvents_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_BlobSetEvents_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_BlobSetEvents_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BlobShareDataStoreModel.FK_BlobSetEvents_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="Invitation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitation object.
        /// </summary>
        /// <param name="invitationId">Initial value of the InvitationId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="privilege">Initial value of the Privilege property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="expirationDateTime">Initial value of the ExpirationDateTime property.</param>
        public static Invitation CreateInvitation(global::System.Guid invitationId, global::System.String email, global::System.Int32 privilege, global::System.DateTime creationDateTime, global::System.DateTime expirationDateTime)
        {
            Invitation invitation = new Invitation();
            invitation.InvitationId = invitationId;
            invitation.Email = email;
            invitation.Privilege = privilege;
            invitation.CreationDateTime = creationDateTime;
            invitation.ExpirationDateTime = expirationDateTime;
            return invitation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                if (_InvitationId != value)
                {
                    OnInvitationIdChanging(value);
                    ReportPropertyChanging("InvitationId");
                    _InvitationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvitationId");
                    OnInvitationIdChanged();
                }
            }
        }
        private global::System.Guid _InvitationId;
        partial void OnInvitationIdChanging(global::System.Guid value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Privilege
        {
            get
            {
                return _Privilege;
            }
            set
            {
                OnPrivilegeChanging(value);
                ReportPropertyChanging("Privilege");
                _Privilege = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Privilege");
                OnPrivilegeChanged();
            }
        }
        private global::System.Int32 _Privilege;
        partial void OnPrivilegeChanging(global::System.Int32 value);
        partial void OnPrivilegeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDateTime
        {
            get
            {
                return _ExpirationDateTime;
            }
            set
            {
                OnExpirationDateTimeChanging(value);
                ReportPropertyChanging("ExpirationDateTime");
                _ExpirationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDateTime");
                OnExpirationDateTimeChanged();
            }
        }
        private global::System.DateTime _ExpirationDateTime;
        partial void OnExpirationDateTimeChanging(global::System.DateTime value);
        partial void OnExpirationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SentDateTime
        {
            get
            {
                return _SentDateTime;
            }
            set
            {
                OnSentDateTimeChanging(value);
                ReportPropertyChanging("SentDateTime");
                _SentDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentDateTime");
                OnSentDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _SentDateTime;
        partial void OnSentDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnSentDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivationDateTime
        {
            get
            {
                return _ActivationDateTime;
            }
            set
            {
                OnActivationDateTimeChanging(value);
                ReportPropertyChanging("ActivationDateTime");
                _ActivationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivationDateTime");
                OnActivationDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivationDateTime;
        partial void OnActivationDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnActivationDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_Invitations_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_Invitations_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_Invitations_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_Invitations_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BlobShareDataStoreModel.FK_Invitations_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="permissionId">Initial value of the PermissionId property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="expirationDateTime">Initial value of the ExpirationDateTime property.</param>
        /// <param name="privilege">Initial value of the Privilege property.</param>
        public static Permission CreatePermission(global::System.Guid permissionId, global::System.DateTime creationDateTime, global::System.DateTime expirationDateTime, global::System.Int32 privilege)
        {
            Permission permission = new Permission();
            permission.PermissionId = permissionId;
            permission.CreationDateTime = creationDateTime;
            permission.ExpirationDateTime = expirationDateTime;
            permission.Privilege = privilege;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                if (_PermissionId != value)
                {
                    OnPermissionIdChanging(value);
                    ReportPropertyChanging("PermissionId");
                    _PermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionId");
                    OnPermissionIdChanged();
                }
            }
        }
        private global::System.Guid _PermissionId;
        partial void OnPermissionIdChanging(global::System.Guid value);
        partial void OnPermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDateTime
        {
            get
            {
                return _ExpirationDateTime;
            }
            set
            {
                OnExpirationDateTimeChanging(value);
                ReportPropertyChanging("ExpirationDateTime");
                _ExpirationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDateTime");
                OnExpirationDateTimeChanged();
            }
        }
        private global::System.DateTime _ExpirationDateTime;
        partial void OnExpirationDateTimeChanging(global::System.DateTime value);
        partial void OnExpirationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Privilege
        {
            get
            {
                return _Privilege;
            }
            set
            {
                OnPrivilegeChanging(value);
                ReportPropertyChanging("Privilege");
                _Privilege = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Privilege");
                OnPrivilegeChanged();
            }
        }
        private global::System.Int32 _Privilege;
        partial void OnPrivilegeChanging(global::System.Int32 value);
        partial void OnPrivilegeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_Permissions_Blobs", "Blob")]
        public Blob Blob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("BlobShareDataStoreModel.FK_Permissions_Blobs", "Blob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("BlobShareDataStoreModel.FK_Permissions_Blobs", "Blob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Blob> BlobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("BlobShareDataStoreModel.FK_Permissions_Blobs", "Blob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Blob>("BlobShareDataStoreModel.FK_Permissions_Blobs", "Blob", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_Permissions_BlobSets", "BlobSet")]
        public BlobSet BlobSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlobSet>("BlobShareDataStoreModel.FK_Permissions_BlobSets", "BlobSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlobSet>("BlobShareDataStoreModel.FK_Permissions_BlobSets", "BlobSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlobSet> BlobSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlobSet>("BlobShareDataStoreModel.FK_Permissions_BlobSets", "BlobSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlobSet>("BlobShareDataStoreModel.FK_Permissions_BlobSets", "BlobSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "RolePermissions", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("BlobShareDataStoreModel.RolePermissions", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("BlobShareDataStoreModel.RolePermissions", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "UserPermissions", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BlobShareDataStoreModel.UserPermissions", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BlobShareDataStoreModel.UserPermissions", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Guid roleId, global::System.String roleName)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.RoleName = roleName;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "RolePermissions", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("BlobShareDataStoreModel.RolePermissions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("BlobShareDataStoreModel.RolePermissions", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "UsersRoles", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BlobShareDataStoreModel.UsersRoles", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BlobShareDataStoreModel.UsersRoles", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static User CreateUser(global::System.Guid userId, global::System.String name, global::System.String email, global::System.Boolean inactive)
        {
            User user = new User();
            user.UserId = userId;
            user.Name = name;
            user.Email = email;
            user.Inactive = inactive;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdentityProvider
        {
            get
            {
                return _IdentityProvider;
            }
            set
            {
                OnIdentityProviderChanging(value);
                ReportPropertyChanging("IdentityProvider");
                _IdentityProvider = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdentityProvider");
                OnIdentityProviderChanged();
            }
        }
        private global::System.String _IdentityProvider;
        partial void OnIdentityProviderChanging(global::System.String value);
        partial void OnIdentityProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameIdentifier
        {
            get
            {
                return _NameIdentifier;
            }
            set
            {
                OnNameIdentifierChanging(value);
                ReportPropertyChanging("NameIdentifier");
                _NameIdentifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameIdentifier");
                OnNameIdentifierChanged();
            }
        }
        private global::System.String _NameIdentifier;
        partial void OnNameIdentifierChanging(global::System.String value);
        partial void OnNameIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_BlobEvents_Users", "BlobEvent")]
        public EntityCollection<BlobEvent> BlobEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlobEvent>("BlobShareDataStoreModel.FK_BlobEvents_Users", "BlobEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlobEvent>("BlobShareDataStoreModel.FK_BlobEvents_Users", "BlobEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_BlobSetEvents_Users", "BlobSetEvent")]
        public EntityCollection<BlobSetEvent> BlobSetEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlobSetEvent>("BlobShareDataStoreModel.FK_BlobSetEvents_Users", "BlobSetEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlobSetEvent>("BlobShareDataStoreModel.FK_BlobSetEvents_Users", "BlobSetEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_Invitations_Users", "Invitation")]
        public EntityCollection<Invitation> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitation>("BlobShareDataStoreModel.FK_Invitations_Users", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitation>("BlobShareDataStoreModel.FK_Invitations_Users", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_UserEvents_Users", "UserEvent")]
        public EntityCollection<UserEvent> UserEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEvent>("BlobShareDataStoreModel.FK_UserEvents_Users", "UserEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEvent>("BlobShareDataStoreModel.FK_UserEvents_Users", "UserEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "UserPermissions", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("BlobShareDataStoreModel.UserPermissions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("BlobShareDataStoreModel.UserPermissions", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "UsersRoles", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("BlobShareDataStoreModel.UsersRoles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("BlobShareDataStoreModel.UsersRoles", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlobShareDataStoreModel", Name="UserEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEvent object.
        /// </summary>
        /// <param name="userEventId">Initial value of the UserEventId property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        public static UserEvent CreateUserEvent(global::System.Guid userEventId, global::System.Int32 eventType, global::System.DateTime eventDateTime)
        {
            UserEvent userEvent = new UserEvent();
            userEvent.UserEventId = userEventId;
            userEvent.EventType = eventType;
            userEvent.EventDateTime = eventDateTime;
            return userEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserEventId
        {
            get
            {
                return _UserEventId;
            }
            set
            {
                if (_UserEventId != value)
                {
                    OnUserEventIdChanging(value);
                    ReportPropertyChanging("UserEventId");
                    _UserEventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserEventId");
                    OnUserEventIdChanged();
                }
            }
        }
        private global::System.Guid _UserEventId;
        partial void OnUserEventIdChanging(global::System.Guid value);
        partial void OnUserEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.Int32 _EventType;
        partial void OnEventTypeChanging(global::System.Int32 value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDateTime
        {
            get
            {
                return _EventDateTime;
            }
            set
            {
                OnEventDateTimeChanging(value);
                ReportPropertyChanging("EventDateTime");
                _EventDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDateTime");
                OnEventDateTimeChanged();
            }
        }
        private global::System.DateTime _EventDateTime;
        partial void OnEventDateTimeChanging(global::System.DateTime value);
        partial void OnEventDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserAgent
        {
            get
            {
                return _UserAgent;
            }
            set
            {
                OnUserAgentChanging(value);
                ReportPropertyChanging("UserAgent");
                _UserAgent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserAgent");
                OnUserAgentChanged();
            }
        }
        private global::System.String _UserAgent;
        partial void OnUserAgentChanging(global::System.String value);
        partial void OnUserAgentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RemoteMachine
        {
            get
            {
                return _RemoteMachine;
            }
            set
            {
                OnRemoteMachineChanging(value);
                ReportPropertyChanging("RemoteMachine");
                _RemoteMachine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RemoteMachine");
                OnRemoteMachineChanged();
            }
        }
        private global::System.String _RemoteMachine;
        partial void OnRemoteMachineChanging(global::System.String value);
        partial void OnRemoteMachineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.String _SessionId;
        partial void OnSessionIdChanging(global::System.String value);
        partial void OnSessionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlobShareDataStoreModel", "FK_UserEvents_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_UserEvents_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_UserEvents_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BlobShareDataStoreModel.FK_UserEvents_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BlobShareDataStoreModel.FK_UserEvents_Users", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
